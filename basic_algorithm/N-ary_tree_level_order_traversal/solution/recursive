/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> lists = new ArrayList<List<Integer>>();
        traverse(lists, root, 0);
        
        return lists;
    }
    
    private void traverse(List<List<Integer>> lists, Node root, int depth) {
        if (null == root) {
            return;
        }
        if (lists.size() == depth) {
            List<Integer> list = new ArrayList<Integer>();
            list.add(root.val);
            lists.add(list);
        } else {
            lists.get(depth).add(root.val);
        }
        for (Node child : root.children) {
            traverse(lists, child, depth + 1);
        }
    }
}
