/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public List<Integer> preorder(Node root) {
        List<Integer> list = new ArrayList<Integer>();
        Stack<Node> stack = new Stack<Node>();
        stack.push(root);
        
        while (!stack.isEmpty()) {
            Node node = stack.pop();
            if (null == node) {
                continue;
            }
            list.add(node.val);
            int i = node.children.size();
            while (0 != i--) {
                stack.push(node.children.get(i));
            }
        }
        
        return list;
    }
}
