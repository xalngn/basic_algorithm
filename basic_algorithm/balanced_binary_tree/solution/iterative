/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if (null == root) {
            return true;
        }
        Map<TreeNode, Integer> map = new HashMap<TreeNode, Integer>();
        map.put(null, 0);
        Stack<TreeNode> stack = new Stack<TreeNode>();
        stack.push(root);
        
        while (!stack.isEmpty()) {
            TreeNode node = stack.peek();
            if (null != map.get(node.left) && null != map.get(node.right)) {
                stack.pop();
                int left = map.get(node.left);
                int right = map.get(node.right);
                if (Math.abs(left - right) > 1) {
                    return false;
                }
                map.put(node, Math.max(left, right) + 1);                
            } else {
                if (null != node.left) {
                    stack.push(node.left);
                }
                if (null != node.right) {
                    stack.push(node.right);
                }
            }
        }
        
        return true;
    }
}
