/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        if (null == root) {
            return false;
        }
        Set<TreeNode> nodes = new HashSet<TreeNode>();
        Stack<TreeNode> stack = new Stack<TreeNode>();
        stack.push(root);
        int curSum = 0;
        
        while (!stack.isEmpty()) {
            TreeNode node = stack.peek();
            if (null == node.left && null == node.right) {
                stack.pop();
                if (curSum + node.val == sum) {
                    return true;
                }
            } else if (nodes.contains(node)) {
                curSum -= node.val;
                stack.pop();
            } else {
                curSum += node.val;
                nodes.add(node);
                if (null != node.right) {
                    stack.push(node.right);
                }
                if (null != node.left) {
                    stack.push(node.left);
                }
            }
        }
            
        return false;
    }
}
