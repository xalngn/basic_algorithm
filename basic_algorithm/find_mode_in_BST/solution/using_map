/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private Map<Integer, Integer> frequency = new HashMap<Integer, Integer>();
    private int maxf = 0;
    
    public int[] findMode(TreeNode root) {
        List<Integer> list = new ArrayList<Integer>();
        
        traverse(root);
        
        for (Map.Entry<Integer, Integer> entry : frequency.entrySet()) {
            if (maxf == entry.getValue()) {
                list.add(entry.getKey());
            }
        }
        
        int[] res = new int[list.size()];
        for (int i = 0; i < list.size(); i++) {
            res[i] = list.get(i);
        }
        
        return res;
    }
    
    private void traverse(TreeNode root) {
        if (null == root) {
            return;
        }
        frequency.put(root.val, frequency.getOrDefault(root.val, 0) + 1);
        maxf = Math.max(maxf, frequency.get(root.val));
        traverse(root.left);
        traverse(root.right);
    }
}
